const fs = require("fs");
const { Client, LocalAuth } = require("whatsapp-web.js");
const qrcode = require("qrcode-terminal");
const schedule = require("node-schedule");

// üìå –ê–π–¥–∏ —Ç–≤–æ–µ–≥–æ —á–∞—Ç–∞ (–≥—Ä—É–ø–ø–∞ –∏–ª–∏ –ª–∏—á–∫–∞)
const CHAT_ID = "120363399343219217@g.us";

// –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Å—Ç–∏—Ö–∏
const verses = JSON.parse(fs.readFileSync("verses.json", "utf8"));
const stateFile = "state.json";

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å—Ç–∏—Ö–∞
function getNextVerseIndex() {
  let state = { index: 0 };

  if (fs.existsSync(stateFile)) {
    state = JSON.parse(fs.readFileSync(stateFile, "utf8"));
  }

  let index = state.index;

  // —Å–ª–µ–¥—É—é—â–∏–π —Å—Ç–∏—Ö
  state.index = (index + 1) % verses.length;

  fs.writeFileSync(stateFile, JSON.stringify(state));

  return index;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ WhatsApp
const client = new Client({
  authStrategy: new LocalAuth(),
  puppeteer: {
    headless: true,
    args: ["--no-sandbox", "--disable-setuid-sandbox"],
  },
});

// –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –ø–æ–∫–∞–∂–µ—Ç QR-–∫–æ–¥ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
client.on("qr", (qr) => {
  qrcode.generate(qr, { small: true });
});

// –ö–æ–≥–¥–∞ –±–æ—Ç –≥–æ—Ç–æ–≤
client.on("ready", () => {
  console.log("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!");

  // CRON: –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 05:00 UTC (09:00 –ø–æ –ï—Ä–µ–≤–∞–Ω—É)
  schedule.scheduleJob("0 5 * * *", async () => {
    const verseIndex = getNextVerseIndex();
    const verse = verses[verseIndex];
    try {
      await client.sendMessage(CHAT_ID, verse);
      console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å—Ç–∏—Ö ‚Ññ${verseIndex + 1}`);
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Ç–∏—Ö–∞:", err);
    }
  });
});

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: –º–æ–∂–Ω–æ –≤—Ä—É—á–Ω—É—é –≤—ã–∑–≤–∞—Ç—å —Å—Ç–∏—Ö –∫–æ–º–∞–Ω–¥–æ–π "!—Å—Ç–∏—Ö"
client.on("message", async (msg) => {
  if (msg.body.toLowerCase() === "!—Å—Ç–∏—Ö") {
    const verseIndex = getNextVerseIndex();
    const verse = verses[verseIndex];
    await msg.reply(`üìñ –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π —Å—Ç–∏—Ö:\n\n${verse}`);
    console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å—Ç–∏—Ö –ø–æ –∫–æ–º–∞–Ω–¥–µ ‚Ññ${verseIndex + 1}`);
  }
});

client.initialize();
